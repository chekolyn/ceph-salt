# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "puppetlabs/centos-7.0-64-nocm"
  #config.vm.box = "chef/centos-7.0"

  # Centos7 Disable Firewall
  config.vm.provision "shell", inline: "systemctl disable firewalld",
    run: "always"
  config.vm.provision "shell", inline: "systemctl stop firewalld",
    run: "always"

  config.vm.provider "virtualbox" do |v|
    v.memory = 1024
  end

  config.vm.define "master" do |node|
    node.vm.hostname = "master"
    node.vm.network :private_network, ip: "192.168.33.10"

    node.vm.synced_folder "../../salt/", "/srv/salt"
    node.vm.synced_folder "pillar/", "/srv/pillar"

    # salt-master provisioning
    node.vm.provision :salt do |salt|
      salt.install_master = true
      salt.always_install = true
      salt.master_config = "configs/master"
      salt.run_highstate = false
      salt.bootstrap_options = "-P"
      salt.master_key = '../common/keys/master.pem'
      salt.master_pub = '../common/keys/master.pub'

      salt.minion_config = "configs/minion"
      salt.minion_key = '../common/keys/master.pem'
      salt.minion_pub = '../common/keys/master.pub'

      salt.seed_master = {
        'master' => '../common/keys/master.pub',
        'node01' => '../common/keys/node01.pub',
        'node02' => '../common/keys/node02.pub',
        'node03' => '../common/keys/node03.pub'
      }
    end
  end

  config.vm.define "node01" do |node|
    node.vm.hostname = "node01"
    node.vm.network :private_network, ip: "192.168.33.20"

    # Additional NIC for cluster network
    node.vm.network :private_network, ip: "192.168.36.20"

    # Add 3 additional 10GB drives
    node.vm.provider "virtualbox" do |v|
      # Centos image doesn't come with a SATAController, adding it:
      unless File.exist?(File.expand_path("~/#{node.vm.hostname}-1.vdi"))
        puts "**** Adding SATA Controller on: #{node.vm.hostname} once the first disk is there asuming we don't need to do this *****"
        v.customize ["storagectl", :id, "--name", "SATA Controller", "--add", "sata"]
      end

      ["1","2","3"].each do |disk|
        diskname = File.expand_path("~/#{node.vm.hostname}-#{disk}.vdi")
        v.customize ['createhd', '--filename', diskname, '--size', 10240]
        v.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', disk, '--device', 0, '--type', 'hdd', '--medium', diskname]
      end
    end

    # salt-minion provisioning
    node.vm.provision :salt do |salt|
      salt.minion_config = "configs/minion"
      salt.bootstrap_options = "-P"
      salt.minion_key = "../common/keys/#{node.vm.hostname}.pem"
      salt.minion_pub = "../common/keys/#{node.vm.hostname}.pub"
    end
  end

  config.vm.define "node02" do |node|
    node.vm.hostname = "node02"
    node.vm.network :private_network, ip: "192.168.33.30"

    # Additional NIC for cluster network
    node.vm.network :private_network, ip: "192.168.36.30"

    # Add 3 additional 10GB drives
    node.vm.provider "virtualbox" do |v|
      # Centos image doesn't come with a SATAController, adding it:
      unless File.exist?(File.expand_path("~/#{node.vm.hostname}-1.vdi"))
        puts "**** Adding SATA Controller on: #{node.vm.hostname} once the first disk is there asuming we don't need to do this *****"
        v.customize ["storagectl", :id, "--name", "SATA Controller", "--add", "sata"]
      end

      ["1","2","3"].each do |disk|
        diskname = File.expand_path("~/#{node.vm.hostname}-#{disk}.vdi")
        v.customize ['createhd', '--filename', diskname, '--size', 10240]
        v.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', disk, '--device', 0, '--type', 'hdd', '--medium', diskname]
      end
    end

    # salt-minion provisioning
    node.vm.provision :salt do |salt|
      salt.minion_config = "configs/minion"
      salt.bootstrap_options = "-P"
      salt.minion_key = "../common/keys/#{node.vm.hostname}.pem"
      salt.minion_pub = "../common/keys/#{node.vm.hostname}.pub"
    end
  end

  config.vm.define "node03" do |node|
    node.vm.hostname = "node03"
    node.vm.network :private_network, ip: "192.168.33.40"

    # Additional NIC for cluster network
    node.vm.network :private_network, ip: "192.168.36.40"

    # Add 3 additional 4GB drives
    node.vm.provider "virtualbox" do |v|
      # Centos image doesn't come with a SATAController, adding it:
      unless File.exist?(File.expand_path("~/#{node.vm.hostname}-1.vdi"))
        puts "**** Adding SATA Controller on: #{node.vm.hostname} once the first disk is there asuming we don't need to do this *****"
        v.customize ["storagectl", :id, "--name", "SATA Controller", "--add", "sata"]
      end

      ["1","2","3"].each do |disk|
        diskname = File.expand_path("~/#{node.vm.hostname}-#{disk}.vdi")
        v.customize ['createhd', '--filename', diskname, '--size', 10240]
        v.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', disk, '--device', 0, '--type', 'hdd', '--medium', diskname]
      end
    end

    # salt-minion provisioning
    node.vm.provision :salt do |salt|
      salt.minion_config = "configs/minion"
      salt.bootstrap_options = "-P"
      salt.minion_key = "../common/keys/#{node.vm.hostname}.pem"
      salt.minion_pub = "../common/keys/#{node.vm.hostname}.pub"
    end
  end

end
